global
  log /dev/log local0
  log /dev/log local1 notice
  chroot /var/lib/haproxy
  stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
  stats timeout 30s
  user haproxy
  group haproxy
  daemon

  # Default SSL material locations
  ca-base /etc/ssl/certs
  crt-base /etc/ssl/private

  # Default ciphers to use on SSL-enabled listening sockets.
  # For more information, see ciphers(1SSL). This list is from:
  #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
  # An alternative list with additional directives can be obtained from
  #  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
  ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
  ssl-default-bind-options no-sslv3

defaults
  log global
  mode http
  option httplog
  option dontlognull
  timeout connect 5000
  timeout client  50000
  timeout server  50000
  errorfile 400 /usr/local/etc/haproxy/errors/400.http
  errorfile 403 /usr/local/etc/haproxy/errors/403.http
  errorfile 408 /usr/local/etc/haproxy/errors/408.http
  errorfile 500 /usr/local/etc/haproxy/errors/500.http
  errorfile 502 /usr/local/etc/haproxy/errors/502.http
  errorfile 503 /usr/local/etc/haproxy/errors/503.http
  errorfile 504 /usr/local/etc/haproxy/errors/504.http

frontend fe-http-in
  bind *:80
  # Define hosts
  {% for config in haproxy_docker_config %}
  {% if config.frontend_port == 80 %}
  acl goto-{{ config.name }}  hdr(host) -i {{ config.frontend }}
  {% endif %}
  {% endfor %}

  ## figure out which one to use
  {% for config in haproxy_docker_config %}
  {% if config.frontend_port == 80 %}
  use_backend app-{{ config.name }} if {{ config.name }}
  {% endif %}
  {% endfor %}

frontend fe-https-in
  bind *:443
  # Define hosts
  {% for config in haproxy_docker_config %}
  {% if config.frontend_port == 443 %}
  acl goto-{{ config.name }}  hdr(host) -i {{ config.frontend }}
  {% endif %}
  {% endfor %}

  ## figure out which one to use
  {% for config in haproxy_docker_config %}
  {% if config.frontend_port == 443 %}
  use_backend app-{{ config.name }} if {{ config.name }}
  {% endif %}
  {% endfor %}

{% for config in haproxy_docker_config %}
backend app-{{ config.name }}
  {% for backend  in config.backend %}
  server node1 {{ backend }}
  {% endfor %}
{% endfor %}
